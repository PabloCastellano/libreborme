---
version: "2.4"

services:
  postgres:
    image: postgres:9.5
    volumes:
      - db-data:/var/lib/postgresql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: &db_user libreborme
      POSTGRES_PASSWORD: &db_pass libreborme
      POSTGRES_DB: &db_name libreborme

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    ports:
      - "9200:9200"
    environment:
      discovery.type: single-node
      xpack.security.enabled: "false"
  
  django_base: &django
    image: libreborme
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: 3.6
        ENV: production
        APP_DIR: /app
      target: final
    depends_on: 
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_started
    environment:
      DATABASES_DEFAULT_NAME: *db_name
      DATABASES_DEFAULT_USER: *db_user
      DATABASES_DEFAULT_PASSWORD: *db_pass
      DATABASES_DEFAULT_HOST: postgres
      DATABASES_DEFAULT_PORT: 5432
      ALLOWED_HOSTS: "127.0.0.1,localhost"
  
  django_init:
    <<: *django
    command: 
      - sh
      - -c
      - "python manage.py migrate; python manage.py loaddata libreborme/fixtures/config.json"

  django:
    <<: *django
    ports:
      - "8000:8000"
    healthcheck:
      test: "/usr/bin/wget --quiet --tries=1 --spider http://localhost:8000/healthz/ || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
    command: 
      - python
      - manage.py
      - runserver
      - 0.0.0.0:8000

volumes:
  db-data:
